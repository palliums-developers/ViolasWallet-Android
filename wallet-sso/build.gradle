apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion = versions.buildTools

    defaultConfig {
        applicationId "com.violas.wallet.sso"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode rootProject.gitCommitCount
        versionName names.name
        archivesBaseName = "Violas-SSO-${versionName}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        release {
            Properties properties = new Properties()
            File configFile = project.rootProject.file('sign.properties')
            if (!configFile.exists()) {
                configFile = project.rootProject.file('testSign.properties')
            }
            properties.load(configFile.newDataInputStream())

            storeFile file(properties.getProperty('keyFile'))

            keyAlias properties.getProperty('keyAlias')
            keyPassword properties.getProperty('keyPassword');
            storePassword properties.getProperty('storePassword');
        }
        debug {
            storeFile file("../keystore/debug.keystore")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "TESTNET", '"testnet"'
        }
        debug {
            ext.alwaysUpdateBuildId = false
            signingConfig signingConfigs.debug
            buildConfigField "String", "TESTNET", '"testnet"'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xallow-result-return-type"]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin_stdlib"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
    implementation "androidx.core:core-ktx:$versions.androidx_core"
    implementation "androidx.appcompat:appcompat:$versions.androidx_appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"
    implementation "androidx.recyclerview:recyclerview:$versions.androidx_recyclerview"
    implementation "com.google.android.material:material:1.0.0"

    // jetPack paging see https://developer.android.com/jetpack/docs/getting-started?hl=zh-CN
    implementation "androidx.paging:paging-runtime:$versions.androidx_paging"
    testImplementation "androidx.paging:paging-common:$versions.androidx_paging"
    implementation "androidx.paging:paging-runtime-ktx:$versions.androidx_paging"

    implementation "androidx.lifecycle:lifecycle-extensions:$versions.androidx_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidx_lifecycle"
    implementation "androidx.activity:activity-ktx:$versions.androidx_activityKtx"

    testImplementation "junit:junit:$versions.test_junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidTest_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidTest_espresso"

    implementation "androidx.room:room-runtime:$versions.androidx_room"
    kapt "androidx.room:room-compiler:$versions.androidx_room"
    implementation "androidx.room:room-ktx:$versions.androidx_room"

    // see https://github.com/googlesamples/easypermissions
    implementation 'pub.devrel:easypermissions:3.0.0'

    implementation project(':lib-core')
    implementation project(':lib-zbar-scan')
    implementation project(":lib-switch")
    implementation project(':lib-libra-core')

    // EventBus see https://github.com/greenrobot/EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //布局到状态栏 see https://github.com/niorgai/StatusBarCompat
    implementation('com.github.niorgai:StatusBarCompat:2.3.3', {
        exclude group: 'androidx.appcompat:appcompat'
        exclude group: 'com.google.android.material:material'
    })

    //头条适配方案 see https://github.com/JessYanCoding/AndroidAutoSize
    implementation "me.jessyan:autosize:1.1.2"

    // see https://github.com/ittianyu/BottomNavigationViewEx
    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'
}
