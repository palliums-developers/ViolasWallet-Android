apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion = versions.buildTools


    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xallow-result-return-type"]
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation "junit:junit:$versions.test_junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidTest_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidTest_espresso"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin_stdlib"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"

    api "androidx.core:core-ktx:$versions.androidx_core"
    api "androidx.appcompat:appcompat:$versions.androidx_appcompat"
    api "androidx.recyclerview:recyclerview:$versions.androidx_recyclerview"
    api "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"
    api "androidx.lifecycle:lifecycle-extensions:$versions.androidx_lifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidx_lifecycle"
    api "androidx.activity:activity-ktx:$versions.androidx_activityKtx"
    api "com.google.android.material:material:1.0.0"

    // jetPack paging see https://developer.android.com/jetpack/docs/getting-started?hl=zh-CN
    api "androidx.paging:paging-runtime:$versions.androidx_paging"
    api "androidx.paging:paging-runtime-ktx:$versions.androidx_paging"
    testImplementation "androidx.paging:paging-common:$versions.androidx_paging"

    // see https://github.com/square/
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp3"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit2"

    // see https://github.com/niorgai/StatusBarCompat
    api('com.github.niorgai:StatusBarCompat:2.3.3', {
        exclude group: 'androidx.appcompat:appcompat'
        exclude group: 'com.google.android.material:material'
    })

    // see https://github.com/YoKeyword/Fragmentation
    api 'me.yokeyword:fragmentationx:1.0.1'

    // see https://github.com/scwang90/SmartRefreshLayout
    api "com.scwang.smartrefresh:SmartRefreshLayout:1.1.0"
    api "com.scwang.smartrefresh:SmartRefreshHeader:1.1.0"

    // see https://github.com/li-xiaojun/XPopup
    api 'com.lxj:xpopup:1.8.8-x'

    // see https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20180709165613#_2
    api 'com.tencent.bugly:crashreport:3.1.0'
}
