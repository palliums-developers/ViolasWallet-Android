apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion = versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation libraries.test_junit
    androidTestImplementation libraries.androidTest_junit
    androidTestImplementation libraries.androidTest_runner
    androidTestImplementation libraries.androidTest_espresso

    implementation project(':lib-common')

    api libraries.spongycastle_core
    api libraries.spongycastle_prov

    api libraries.protobuf_java
    /*api libraries.grpc_okhttp
    api libraries.grpc_protobuf
    api libraries.grpc_stub*/
    api libraries.javax_annotation

    api libraries.okhttp3
    api libraries.retrofit2

    implementation libraries.crypto_eddsa
    //implementation libraries.novacrypto_BIP39
}

/*
protobuf {
    protoc {
        artifact = libraries.protobuf_protoc
    }

    plugins {
        javalite {
            artifact = libraries.protobuf_protoc_gen_java
        }
        grpc {
            artifact = libraries.grpc_protoc_gen_grpc_java
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                java {}
                grpc {
                    option 'lite'
                }
            }
        }
    }
}*/
